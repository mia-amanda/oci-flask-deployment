name: Deploy to Oracle Cloud using Docker Hub and Podman

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up OCI CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-venv python3-pip

        # Create a virtual environment for OCI CLI
        python3 -m venv oci_env
        source oci_env/bin/activate

        # Install OCI CLI inside the virtual environment
        pip install oci-cli

    - name: Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        
        # Write the plain text private key to a file
        echo "${{ secrets.ORACLE_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        
        chmod 600 ~/.oci/oci_api_key.pem
    
        # Manually create the OCI config file
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.ORACLE_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.ORACLE_FINGERPRINT }}" >> ~/.oci/config
        echo "tenancy=${{ secrets.ORACLE_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.ORACLE_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
        chmod 600 ~/.oci/config
      env:
        ORACLE_TENANCY_OCID: ${{ secrets.ORACLE_TENANCY_OCID }}
        ORACLE_USER_OCID: ${{ secrets.ORACLE_USER_OCID }}
        ORACLE_REGION: ${{ secrets.ORACLE_REGION }}
        ORACLE_COMPARTMENT_OCID: ${{ secrets.ORACLE_COMPARTMENT_OCID }}
        ORACLE_FINGERPRINT: ${{ secrets.ORACLE_FINGERPRINT }}

    - name: Build and Push Docker image to Docker Hub
      run: |
    
        # Login to Docker Hub
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
        # Build Docker Image
        docker build -t "${{ secrets.DOCKER_USERNAME }}/oci-flask-deployment-app:latest" .
    
        # Push Docker Image
        docker push "${{ secrets.DOCKER_USERNAME }}/oci-flask-deployment-app:latest"

    - name: Deploy Flask App via SSH
      run: |
        # Create the .ssh directory if it doesn't exist
        mkdir -p ~/.ssh

        # Write the plain text SSH private key directly to the file
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        
        # Set the correct permissions
        chmod 600 ~/.ssh/id_rsa

        # SSH into the OCI compute instance
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa opc@129.150.35.184 \
          "
          # Install Podman
          sudo dnf install -y podman && \
          
          # Allow port 5000 in the firewall
          sudo firewall-cmd --permanent --add-port=5000/tcp && \
          sudo firewall-cmd --reload && \
          
          # Pull Docker image using Podman and run the container
          podman pull docker.io/${{ secrets.DOCKER_USERNAME }}/your-app:latest && \
          podman run -d -p 5000:5000 docker.io/${{ secrets.DOCKER_USERNAME }}/your-app:latest
          "


        



